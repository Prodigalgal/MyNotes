apiVersion: v1
kind: Namespace
metadata:
  name: es
---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-password
  namespace: elasticsearch
data:
  ES_PASSWORD: RWxhc3RpY3NlYXJjaDJPMjE=
  ES_USER: ZWxhc3RpYw==
type: Opaque
---
# 创建 ConfigMap 用于挂载配置文件
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: es
  name: elasticsearch-config
  labels:
    app: elasticsearch-configMap
data:
  # 具体挂载的配置文件
  elasticsearch.yml: |-
    cluster.name: es-cluster
    # 环境变量，通过 kubectl explain pod.spec.containers.env.valueFrom.fieldRef 获取
    node.name: ${MY_POD_NAME}
    path.data: /usr/share/elasticsearch/data
    path.logs: /usr/share/elasticsearch/logs
    network.host: 0.0.0.0
    http.port: 9200
    http.cors.enabled: true
    http.cors.allow-origin: "*"
    xpack.security.enabled: true
    cluster.initial_master_nodes: [ "elasticsearch-0","elasticsearch-1","elasticsearch-2" ]
    discovery.seed_hosts: [ "elasticsearch-0.esc-svc","elasticsearch-1.esc-svc","elasticsearch-2.esc-svc" ]
---
# 创建 StatefulSet，ES 属于数据库类型的应用
apiVersion: apps/v1
kind: StatefulSet
metadata:
  # pod + n = pod name
  name: elasticsearch
  namespace: es
spec:
  # 填写无头服务的名称
  serviceName: "esc-svc"
  replicas: 3
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      initContainers:
        - name: es-cluster-kernel-init
          image: busybox
          # 初始化容器执行的命令，调整内核参数
          command: [ "sysctl", "-w", "vm.max_map_count=262144" ]
          # 开启特权模式
          securityContext:
            privileged: true
        - name: es-cluster-permissions
          image: alpine:3.6
          # 初始化容器执行的命令，调整权限
          command: [ "chmod", "-R", "777", "/usr/share/elasticsearch/data" ]
          # 开启特权模式
          securityContext:
            privileged: true
          volumeMounts:
            - name: es-data
              mountPath: /usr/share/elasticsearch/data
        - name: es-cluster-ulimit
          image: busybox
          command: [ "sh", "-c", "ulimit -n 65536" ]
          securityContext:
            privileged: true
      containers:
        - name: elasticsearch
          image: elasticsearch:8.6.2
          imagePullPolicy: Always
          ports:
            - containerPort: 9200
            - containerPort: 9300
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-password
                  key: ES_PASSWORD
          volumeMounts:
            # 挂载配置
            - name: es-config
              mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
              subPath: elasticsearch.yml
            # 挂载数据
            - name: es-data
              mountPath: /usr/share/elasticsearch/data
      volumes:
        - name: es-config
          # configMap 挂载
          configMap:
            name: elasticsearch-config
  # 这步自动创建 pvc，并挂载动态 pv
  volumeClaimTemplates:
    - metadata:
        name: es-data
        namespace: es
      spec:
        accessModes:
          - ReadWriteMany
        storageClassName: nfs-storage
        resources:
          requests:
            storage: 1Gi
---
# 创建 Headless Service
apiVersion: v1
kind: Service
metadata:
  name: esc-svc
  namespace: es
spec:
  ports:
    - port: 9300
      targetPort: 9300
      name: inner
  clusterIP: None
  selector:
    app: elasticsearch
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: es
  labels:
    app: kibana
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
        - name: kibana
          image: kibana:8.6.2
          imagePullPolicy: Always
          env:
            - name: ELASTICSEARCH_URL
              value: http://es-svc.es.svc.cluster.local:9200
            - name: ELASTICSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-password
                  key: ES_USER
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-password
                  key: ES_PASSWORD
          ports:
            - containerPort: 5601
---
# 创建 Service
apiVersion: v1
kind: Service
metadata:
  name: es-svc
  namespace: es
spec:
  ports:
    - port: 9200
      nodePort: 31920
      name: outer
  type: NodePort
  selector:
    app: elasticsearch
---
apiVersion: v1
kind: Service
metadata:
  name: kb-svc
  namespace: es
  labels:
    app: kibana
spec:
  ports:
    - port: 5601
      nodePort: 31560
  type: NodePort
  selector:
    app: kibana